{"ast":null,"code":"var _jsxFileName = \"/home/user/dev/www/Block-chain/Block_chain_UI_Project/block_chain_Etherium_reactjs/src/components/Apartment/apartmentGrid/apartmentGrid.js\";\nimport React from 'react';\nimport { Grid, GridColumn as Column, GridToolbar } from '@progress/kendo-react-grid';\nimport { ExcelExport } from '@progress/kendo-react-excel-export';\nimport products from './apartments.json';\nimport { MyCommandCell } from './actioneditbutton.js';\nimport { filterBy } from '@progress/kendo-data-query';\nimport { Input } from '@progress/kendo-react-inputs';\nimport MyInventoryAnchorTag from './GridAnchorTag.js';\nimport { formatDate } from '@telerik/kendo-intl'; // import '../../css/inventerGrid.css'\n\nimport '../../../css/inventerGrid.css';\nimport { Link } from \"react-router-dom\";\nproducts.forEach(o => {\n  o.orderDate = formatDate(new Date(o.orderDate), {\n    date: \"long\"\n  });\n  o.expiryDate = formatDate(new Date(o.expiryDate), {\n    date: \"long\"\n  });\n  o.shippedDate = o.shippedDate === 'NULL' ? undefined : new Date(o.shippedDate);\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.export = () => {\n      this._export.save();\n    };\n\n    this.CommandCell = MyCommandCell({\n      editField: this.editField,\n      tenant: this.props\n    });\n    this.state = this.createState(0, 10);\n    this.state.search = false;\n    this.pageChange = this.pageChange.bind(this);\n    this.state.tenant = false;\n\n    if (this.props.location.pathname === \"/all-apartment/grid\") {\n      this.state.apartment = \"All Apartments\";\n    } else {\n      this.state.apartment = \"My Apartments\";\n    }\n\n    if (this.props.location.pathname === \"/tenant/apartment/grid\") {\n      this.state.tenant = true;\n\n      for (let i = 0; i <= products.length; i++) {\n        if (products[i] !== undefined) {\n          if (products[i]['ProductID'].toString() === this.props.location.search.slice(4)) {\n            this.state.buildingName = products[i]['ProductName'];\n          }\n        }\n      }\n    }\n  }\n\n  pageChange(event) {\n    this.setState(this.createState(event.page.skip, event.page.take));\n  }\n\n  createState(skip, take) {\n    return {\n      items: products.slice(skip, skip + take),\n      total: products.length,\n      skip: skip,\n      pageSize: take,\n      pageable: {\n        buttonCount: 0,\n        info: true,\n        type: 'numeric',\n        pageSizes: true,\n        previousNext: true\n      }\n    };\n  }\n\n  render() {\n    console.log(this.state.tenant);\n    return React.createElement(ExcelExport, {\n      data: products,\n      ref: exporter => this._export = exporter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(GridToolbar, {\n      className: \"Grid_excel_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.search === true ? React.createElement(Input, {\n      className: \"search-input2\",\n      onChange: this.handleChange,\n      placeholder: \"search\",\n      style: {\n        float: \"center\",\n        marginLeft: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }) : null, this.state.search === true ? React.createElement(\"button\", {\n      className: \"k-button\",\n      name: \"hello\",\n      onClick: () => {\n        this.onClickButton(\"cancel\");\n      },\n      style: {\n        float: \"center\",\n        boxShadow: \"none\",\n        color: \"#586069\",\n        position: \"relative\",\n        padding: '0px',\n        backgroundColor: \"#efefef\",\n        border: \"none\",\n        marginLeft: \"-25px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"X\") : null, React.createElement(\"button\", {\n      title: \"Export PDF\",\n      className: \"k-button\",\n      onClick: this.export,\n      style: {\n        float: \"right\",\n        boxShadow: \"none\",\n        color: \"#fff\",\n        backgroundColor: \"#215CA0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"k-icon k-i-download\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      className: \"apartment_grid_data\",\n      style: {\n        fontFamily: \"Roboto ,Helvetica, Arial, sans-serif \",\n        fontSize: \"14px\",\n        fontWeight: \"400\"\n      },\n      data: this.state.items // data={orderBy(this.state.data.slice(this.state.skip, this.state.take + this.state.skip), this.state.sort)}\n      ,\n      skip: this.state.skip,\n      selectedField: \"selected\",\n      onSelectionChange: this.selectionChange,\n      onHeaderSelectionChange: this.headerSelectionChange,\n      take: this.state.take,\n      total: this.state.total // total={this.state.data.length}\n      // pageable={true}\n      ,\n      pageable: this.state.pageable,\n      pageSize: this.state.pageSize,\n      onPageChange: this.pageChange,\n      sortable: true,\n      sort: this.state.sort,\n      onSortChange: e => {\n        this.setState({\n          sort: e.sort\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Column, {\n      className: \"check-box-color\",\n      field: \"selected\",\n      width: \"50px\",\n      marginLeft: \"100px\",\n      headerSelectionValue: this.state.items.findIndex(dataItem => dataItem.selected === false) === -1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Column, {\n      filterable: false,\n      cell: this.CommandCell,\n      title: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(Column, {\n      field: \"city\",\n      title: \"City\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(Column, {\n      field: \"Country\",\n      title: \"Country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(Column, {\n      field: \"orderDate\",\n      title: \"Created Date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(Column, {\n      field: \"Opened_units\",\n      title: \"Opened Units\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(Column, {\n      field: \"Rented_units\",\n      title: \"Rented Units\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/user/dev/www/Block-chain/Block_chain_UI_Project/block_chain_Etherium_reactjs/src/components/Apartment/apartmentGrid/apartmentGrid.js"],"names":["React","Grid","GridColumn","Column","GridToolbar","ExcelExport","products","MyCommandCell","filterBy","Input","MyInventoryAnchorTag","formatDate","Link","forEach","o","orderDate","Date","date","expiryDate","shippedDate","undefined","App","Component","constructor","props","export","_export","save","CommandCell","editField","tenant","state","createState","search","pageChange","bind","location","pathname","apartment","i","length","toString","slice","buildingName","event","setState","page","skip","take","items","total","pageSize","pageable","buttonCount","info","type","pageSizes","previousNext","render","console","log","exporter","handleChange","float","marginLeft","onClickButton","boxShadow","color","position","padding","backgroundColor","border","fontFamily","fontSize","fontWeight","selectionChange","headerSelectionChange","sort","e","findIndex","dataItem","selected"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAU,IAAIC,MAA7B,EAAqCC,WAArC,QAAwD,4BAAxD;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,QAAT,QAAyB,4BAAzB;AACA,SAASC,KAAT,QAAsB,8BAAtB;AACA,OAAOC,oBAAP,MAAiC,oBAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B,C,CACA;;AACA,OAAO,+BAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEAN,QAAQ,CAACO,OAAT,CAAiBC,CAAC,IAAI;AAAKA,EAAAA,CAAC,CAACC,SAAF,GAAcJ,UAAU,CAAC,IAAIK,IAAJ,CAASF,CAAC,CAACC,SAAX,CAAD,EAAwB;AAAEE,IAAAA,IAAI,EAAE;AAAR,GAAxB,CAAxB;AACvBH,EAAAA,CAAC,CAACI,UAAF,GAAeP,UAAU,CAAC,IAAIK,IAAJ,CAASF,CAAC,CAACI,UAAX,CAAD,EAAyB;AAAED,IAAAA,IAAI,EAAE;AAAR,GAAzB,CAAzB;AACAH,EAAAA,CAAC,CAACK,WAAF,GAAgBL,CAAC,CAACK,WAAF,KAAkB,MAAlB,GAA2BC,SAA3B,GAAuC,IAAIJ,IAAJ,CAASF,CAAC,CAACK,WAAX,CAAvD;AACH,CAHD;;AAIA,MAAME,GAAN,SAAkBrB,KAAK,CAACsB,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAwBnBC,MAxBmB,GAwBV,MAAM;AACX,WAAKC,OAAL,CAAaC,IAAb;AACH,KA1BkB;;AAAA,SA+CnBC,WA/CmB,GA+CLrB,aAAa,CAAC;AACxBsB,MAAAA,SAAS,EAAE,KAAKA,SADQ;AAExBC,MAAAA,MAAM,EAAC,KAAKN;AAFY,KAAD,CA/CR;AAEf,SAAKO,KAAL,GAAa,KAAKC,WAAL,CAAiB,CAAjB,EAAoB,EAApB,CAAb;AACA,SAAKD,KAAL,CAAWE,MAAX,GAAmB,KAAnB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKJ,KAAL,CAAWD,MAAX,GAAoB,KAApB;;AACA,QAAG,KAAKN,KAAL,CAAWY,QAAX,CAAoBC,QAApB,KAAiC,qBAApC,EAA0D;AACtD,WAAKN,KAAL,CAAWO,SAAX,GAAuB,gBAAvB;AACH,KAFD,MAEK;AACD,WAAKP,KAAL,CAAWO,SAAX,GAAuB,eAAvB;AACH;;AACD,QAAG,KAAKd,KAAL,CAAWY,QAAX,CAAoBC,QAApB,KAAiC,wBAApC,EAA6D;AACzD,WAAKN,KAAL,CAAWD,MAAX,GAAoB,IAApB;;AACA,WAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIjC,QAAQ,CAACkC,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,YAAGjC,QAAQ,CAACiC,CAAD,CAAR,KAAgBnB,SAAnB,EAA6B;AACzB,cAAGd,QAAQ,CAACiC,CAAD,CAAR,CAAY,WAAZ,EAAyBE,QAAzB,OAAwC,KAAKjB,KAAL,CAAWY,QAAX,CAAoBH,MAApB,CAA2BS,KAA3B,CAAiC,CAAjC,CAA3C,EAA+E;AAC3E,iBAAKX,KAAL,CAAWY,YAAX,GAA0BrC,QAAQ,CAACiC,CAAD,CAAR,CAAY,aAAZ,CAA1B;AACH;AACJ;AACJ;AACJ;AACJ;;AAODL,EAAAA,UAAU,CAACU,KAAD,EAAQ;AACd,SAAKC,QAAL,CAAc,KAAKb,WAAL,CAAiBY,KAAK,CAACE,IAAN,CAAWC,IAA5B,EAAkCH,KAAK,CAACE,IAAN,CAAWE,IAA7C,CAAd;AACH;;AAEDhB,EAAAA,WAAW,CAACe,IAAD,EAAOC,IAAP,EAAa;AACpB,WAAO;AACHC,MAAAA,KAAK,EAAE3C,QAAQ,CAACoC,KAAT,CAAeK,IAAf,EAAqBA,IAAI,GAAGC,IAA5B,CADJ;AAEHE,MAAAA,KAAK,EAAE5C,QAAQ,CAACkC,MAFb;AAGHO,MAAAA,IAAI,EAAEA,IAHH;AAIHI,MAAAA,QAAQ,EAAEH,IAJP;AAKHI,MAAAA,QAAQ,EAAE;AACNC,QAAAA,WAAW,EAAE,CADP;AAENC,QAAAA,IAAI,EAAE,IAFA;AAGNC,QAAAA,IAAI,EAAE,SAHA;AAINC,QAAAA,SAAS,EAAE,IAJL;AAKNC,QAAAA,YAAY,EAAE;AALR;AALP,KAAP;AAaH;;AAKDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK7B,KAAL,CAAWD,MAAvB;AACA,WACI,oBAAC,WAAD;AACI,MAAA,IAAI,EAAExB,QADV;AAEI,MAAA,GAAG,EAAEuD,QAAQ,IAAI,KAAKnC,OAAL,GAAemC,QAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKQ,oBAAC,WAAD;AAAc,MAAA,SAAS,EAAC,mBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACS,KAAK9B,KAAL,CAAWE,MAAX,KAAsB,IAAtB,GAEe,oBAAC,KAAD;AACI,MAAA,SAAS,EAAC,eADd;AAEI,MAAA,QAAQ,EAAE,KAAK6B,YAFnB;AAGI,MAAA,WAAW,EAAC,QAHhB;AAII,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,UAAU,EAAE;AAA/B,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFf,GAQa,IATtB,EAUiB,KAAKjC,KAAL,CAAWE,MAAX,KAAsB,IAAtB,GACG;AACA,MAAA,SAAS,EAAC,UADV;AAEA,MAAA,IAAI,EAAC,OAFL;AAGA,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKgC,aAAL,CAAmB,QAAnB;AAA8B,OAH/C;AAIA,MAAA,KAAK,EAAE;AAAEF,QAAAA,KAAK,EAAE,QAAT;AAAmBG,QAAAA,SAAS,EAAE,MAA9B;AAAsCC,QAAAA,KAAK,EAAE,SAA7C;AAAuDC,QAAAA,QAAQ,EAAE,UAAjE;AAA6EC,QAAAA,OAAO,EAAE,KAAtF;AACPC,QAAAA,eAAe,EAAE,SADV;AACqBC,QAAAA,MAAM,EAAE,MAD7B;AACqCP,QAAAA,UAAU,EAAC;AADhD,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADH,GAQW,IAlB5B,EAoBY;AACI,MAAA,KAAK,EAAC,YADV;AAEI,MAAA,SAAS,EAAC,UAFd;AAGI,MAAA,OAAO,EAAE,KAAKvC,MAHlB;AAII,MAAA,KAAK,EAAE;AAAEsC,QAAAA,KAAK,EAAE,OAAT;AAAkBG,QAAAA,SAAS,EAAE,MAA7B;AAAqCC,QAAAA,KAAK,EAAE,MAA5C;AAAoDG,QAAAA,eAAe,EAAC;AAApE,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CApBZ,CALR,EAmCQ,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,qBAAhB;AACY,MAAA,KAAK,EAAE;AAAEE,QAAAA,UAAU,EAAE,uCAAd;AAAuDC,QAAAA,QAAQ,EAAE,MAAjE;AAAyEC,QAAAA,UAAU,EAAE;AAArF,OADnB;AAEY,MAAA,IAAI,EAAE,KAAK3C,KAAL,CAAWkB,KAF7B,CAGY;AAHZ;AAIY,MAAA,IAAI,EAAE,KAAKlB,KAAL,CAAWgB,IAJ7B;AAKY,MAAA,aAAa,EAAC,UAL1B;AAMY,MAAA,iBAAiB,EAAE,KAAK4B,eANpC;AAOY,MAAA,uBAAuB,EAAE,KAAKC,qBAP1C;AAQY,MAAA,IAAI,EAAE,KAAK7C,KAAL,CAAWiB,IAR7B;AASY,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWmB,KAT9B,CAUY;AACA;AAXZ;AAYY,MAAA,QAAQ,EAAE,KAAKnB,KAAL,CAAWqB,QAZjC;AAaY,MAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWoB,QAbjC;AAcY,MAAA,YAAY,EAAE,KAAKjB,UAd/B;AAeY,MAAA,QAAQ,EAAE,IAftB;AAgBY,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAW8C,IAhB7B;AAiBY,MAAA,YAAY,EAAGC,CAAD,IAAO;AACjB,aAAKjC,QAAL,CAAc;AACVgC,UAAAA,IAAI,EAAEC,CAAC,CAACD;AADE,SAAd;AAGH,OArBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAsBY,oBAAC,MAAD;AACI,MAAA,SAAS,EAAC,iBADd;AAEI,MAAA,KAAK,EAAC,UAFV;AAGI,MAAA,KAAK,EAAC,MAHV;AAII,MAAA,UAAU,EAAC,OAJf;AAKI,MAAA,oBAAoB,EAChB,KAAK9C,KAAL,CAAWkB,KAAX,CAAiB8B,SAAjB,CAA2BC,QAAQ,IAAIA,QAAQ,CAACC,QAAT,KAAsB,KAA7D,MAAwE,CAAC,CANjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBZ,EA+BY,oBAAC,MAAD;AAAQ,MAAA,UAAU,EAAE,KAApB;AAA2B,MAAA,IAAI,EAAE,KAAKrD,WAAtC;AAAmD,MAAA,KAAK,EAAC,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BZ,EAiCY,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,KAAK,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCZ,EAkCY,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,KAAK,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlCZ,EAmCY,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,KAAK,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnCZ,EAoCY,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,cAAd;AAA6B,MAAA,KAAK,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApCZ,EAqCY,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,cAAd;AAA6B,MAAA,KAAK,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArCZ,CAnCR,CADJ;AA8EH;;AApI6B;;AAsIlC,eAAeP,GAAf","sourcesContent":["import React from 'react';\nimport { Grid, GridColumn as Column, GridToolbar } from '@progress/kendo-react-grid';\nimport { ExcelExport } from '@progress/kendo-react-excel-export';\nimport products from './apartments.json';\nimport { MyCommandCell } from './actioneditbutton.js';\nimport { filterBy } from '@progress/kendo-data-query';\nimport { Input } from '@progress/kendo-react-inputs';\nimport MyInventoryAnchorTag from './GridAnchorTag.js';\nimport { formatDate } from '@telerik/kendo-intl';\n// import '../../css/inventerGrid.css'\nimport '../../../css/inventerGrid.css'\nimport { Link } from \"react-router-dom\";\n\nproducts.forEach(o => {    o.orderDate = formatDate(new Date(o.orderDate), { date: \"long\" });\n    o.expiryDate = formatDate(new Date(o.expiryDate), { date: \"long\" });\n    o.shippedDate = o.shippedDate === 'NULL' ? undefined : new Date(o.shippedDate);\n});\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = this.createState(0, 10);\n        this.state.search= false;\n        this.pageChange = this.pageChange.bind(this);\n        this.state.tenant = false;\n        if(this.props.location.pathname === \"/all-apartment/grid\"){\n            this.state.apartment = \"All Apartments\";\n        }else{\n            this.state.apartment = \"My Apartments\";\n        }\n        if(this.props.location.pathname === \"/tenant/apartment/grid\"){\n            this.state.tenant = true;\n            for (let i = 0; i <= products.length; i++) {\n                if(products[i] !== undefined){\n                    if(products[i]['ProductID'].toString() === this.props.location.search.slice(4)){\n                        this.state.buildingName = products[i]['ProductName']\n                    }\n                }\n            }\n        }\n    }\n    CommandCell;\n    _export;\n    export = () => {\n        this._export.save();\n    }\n    \n    pageChange(event) {\n        this.setState(this.createState(event.page.skip, event.page.take));\n    }\n\n    createState(skip, take) {\n        return {\n            items: products.slice(skip, skip + take),\n            total: products.length,\n            skip: skip,\n            pageSize: take,\n            pageable: {\n                buttonCount: 0,\n                info: true,\n                type: 'numeric',\n                pageSizes: true,\n                previousNext: true\n            }\n        };\n    }\n    CommandCell = MyCommandCell({\n        editField: this.editField,\n        tenant:this.props\n    });\n    render() {\n        console.log(this.state.tenant)\n        return (\n            <ExcelExport\n                data={products}\n                ref={exporter => this._export = exporter}\n            >\n                \n                    <GridToolbar  className=\"Grid_excel_button\">\n                            {this.state.search === true ? \n                                            \n                                            <Input\n                                                className=\"search-input2\"\n                                                onChange={this.handleChange}\n                                                placeholder=\"search\"\n                                                style={{ float: \"center\", marginLeft: \"20px\" }}\n                                            />\n                                        : null}\n                                    {this.state.search === true ? \n                                        <button\n                                        className=\"k-button\"\n                                        name=\"hello\"\n                                        onClick={() => { this.onClickButton(\"cancel\") }}\n                                        style={{ float: \"center\", boxShadow: \"none\", color: \"#586069\",position: \"relative\", padding: '0px',\n                                        backgroundColor: \"#efefef\", border: \"none\", marginLeft:\"-25px\" }}\n                                    >X\n                                    </button> : null}\n                                \n                                <button\n                                    title=\"Export PDF\"\n                                    className=\"k-button\"\n                                    onClick={this.export}\n                                    style={{ float: \"right\", boxShadow: \"none\", color: \"#fff\", backgroundColor:\"#215CA0\" }}\n                                >\n                                    <span className=\"k-icon k-i-download\"></span>\n                                </button>\n                    \n                    </GridToolbar>\n                    <Grid className=\"apartment_grid_data\"\n                                style={{ fontFamily: \"Roboto ,Helvetica, Arial, sans-serif \", fontSize: \"14px\", fontWeight: \"400\" }}\n                                data={this.state.items}\n                                // data={orderBy(this.state.data.slice(this.state.skip, this.state.take + this.state.skip), this.state.sort)}\n                                skip={this.state.skip}\n                                selectedField=\"selected\"\n                                onSelectionChange={this.selectionChange}\n                                onHeaderSelectionChange={this.headerSelectionChange}\n                                take={this.state.take}\n                                total={this.state.total}\n                                // total={this.state.data.length}\n                                // pageable={true}\n                                pageable={this.state.pageable}\n                                pageSize={this.state.pageSize}\n                                onPageChange={this.pageChange}\n                                sortable={true}\n                                sort={this.state.sort}\n                                onSortChange={(e) => {\n                                    this.setState({\n                                        sort: e.sort\n                                    });\n                                }}>\n                                <Column\n                                    className=\"check-box-color\"\n                                    field=\"selected\"\n                                    width=\"50px\"\n                                    marginLeft=\"100px\"\n                                    headerSelectionValue={\n                                        this.state.items.findIndex(dataItem => dataItem.selected === false) === -1\n                                    }\n                                />\n                                <Column filterable={false} cell={this.CommandCell} title=\"Name\"/>\n\n                                <Column field=\"city\" title=\"City\" />\n                                <Column field=\"Country\" title=\"Country\" />\n                                <Column field=\"orderDate\" title=\"Created Date\" />\n                                <Column field=\"Opened_units\" title=\"Opened Units\" />\n                                <Column field=\"Rented_units\" title=\"Rented Units\" />\n                    \n                </Grid>\n            </ExcelExport>\n        );\n    }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}